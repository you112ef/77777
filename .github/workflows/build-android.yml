name: Build Android APK

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  JAVA_VERSION: '21'
  NODE_VERSION: '18'

jobs:
  build:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: sperm-analyzer-mobile/package-lock.json
        
    - name: Install dependencies
      working-directory: sperm-analyzer-mobile
      run: npm ci
      
    - name: Build web assets
      working-directory: sperm-analyzer-mobile
      run: npm run build
      
    - name: Sync Capacitor
      working-directory: sperm-analyzer-mobile
      run: |
        npx cap copy android
        npx cap sync android
        
    - name: Set up Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Make gradlew executable
      working-directory: sperm-analyzer-mobile/android
      run: chmod +x gradlew
      
    - name: Clean project
      working-directory: sperm-analyzer-mobile/android
      run: ./gradlew clean
      
    - name: Build Debug APK
      working-directory: sperm-analyzer-mobile/android
      run: ./gradlew assembleDebug
      
    - name: Build Release APK
      working-directory: sperm-analyzer-mobile/android
      run: ./gradlew assembleRelease
      
    - name: Sign APK (if release)
      if: startsWith(github.ref, 'refs/tags/v')
      working-directory: sperm-analyzer-mobile/android
      run: |
        # This would be where you sign your APK for production
        echo "APK signing would happen here for production builds"
        
    - name: Get version name
      id: version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=${GITHUB_SHA::8}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Rename APK files
      run: |
        mkdir -p artifacts
        cp sperm-analyzer-mobile/android/app/build/outputs/apk/debug/app-debug.apk artifacts/sperm-analyzer-ai-debug-${{ steps.version.outputs.version }}.apk
        if [ -f sperm-analyzer-mobile/android/app/build/outputs/apk/release/app-release-unsigned.apk ]; then
          cp sperm-analyzer-mobile/android/app/build/outputs/apk/release/app-release-unsigned.apk artifacts/sperm-analyzer-ai-release-${{ steps.version.outputs.version }}.apk
        fi
        
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: sperm-analyzer-ai-debug-${{ steps.version.outputs.version }}
        path: artifacts/sperm-analyzer-ai-debug-${{ steps.version.outputs.version }}.apk
        retention-days: 30
        
    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      if: hashFiles('artifacts/sperm-analyzer-ai-release-*.apk') != ''
      with:
        name: sperm-analyzer-ai-release-${{ steps.version.outputs.version }}
        path: artifacts/sperm-analyzer-ai-release-${{ steps.version.outputs.version }}.apk
        retention-days: 90
        
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/sperm-analyzer-ai-debug-${{ steps.version.outputs.version }}.apk
          artifacts/sperm-analyzer-ai-release-${{ steps.version.outputs.version }}.apk
        draft: false
        prerelease: false
        generate_release_notes: true
        name: Release ${{ steps.version.outputs.version }}
        body: |
          üöÄ **Sperm Analyzer AI - Android Release ${{ steps.version.outputs.version }}**
          
          ## üì± Download Options
          
          - **Debug APK**: For development and testing
          - **Release APK**: For production use (if available)
          
          ## üìã Installation Instructions
          
          1. Download the APK file to your Android device
          2. Enable "Install from Unknown Sources" in your device settings
          3. Tap the APK file to install
          4. Grant necessary permissions when prompted
          
          ## üîß Technical Details
          
          - Built with Capacitor 6.0
          - Target Android API level: Latest
          - Minimum Android version: 7.0 (API 24)
          
          ## üêõ Issues & Support
          
          Report any issues on our [GitHub Issues](https://github.com/${{ github.repository }}/issues) page.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: sperm-analyzer-mobile/package-lock.json
        
    - name: Install dependencies
      working-directory: sperm-analyzer-mobile
      run: npm ci
      
    - name: Run tests
      working-directory: sperm-analyzer-mobile
      run: |
        echo "Tests would run here"
        # npm test